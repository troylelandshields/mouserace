#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Maze2SL5.Web
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="troylshields3")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMaze_Race(Maze_Race instance);
    partial void UpdateMaze_Race(Maze_Race instance);
    partial void DeleteMaze_Race(Maze_Race instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["troylshields3ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Maze_Race> Maze_Races
		{
			get
			{
				return this.GetTable<Maze_Race>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Maze_Race")]
	public partial class Maze_Race : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Race_ID;
		
		private System.Nullable<int> _Maze_Time;
		
		private string _Maze_Name;
		
		private string _Maze_OS;
		
		private string _Maze_Computer;
		
		private string _Maze_Mouse;
		
		private string _Maze_MaxLevel;
		
		private string _Maze_HashGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRace_IDChanging(int value);
    partial void OnRace_IDChanged();
    partial void OnMaze_TimeChanging(System.Nullable<int> value);
    partial void OnMaze_TimeChanged();
    partial void OnMaze_NameChanging(string value);
    partial void OnMaze_NameChanged();
    partial void OnMaze_OSChanging(string value);
    partial void OnMaze_OSChanged();
    partial void OnMaze_ComputerChanging(string value);
    partial void OnMaze_ComputerChanged();
    partial void OnMaze_MouseChanging(string value);
    partial void OnMaze_MouseChanged();
    partial void OnMaze_MaxLevelChanging(string value);
    partial void OnMaze_MaxLevelChanged();
    partial void OnMaze_HashGroupChanging(string value);
    partial void OnMaze_HashGroupChanged();
    #endregion
		
		public Maze_Race()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Race_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Race_ID
		{
			get
			{
				return this._Race_ID;
			}
			set
			{
				if ((this._Race_ID != value))
				{
					this.OnRace_IDChanging(value);
					this.SendPropertyChanging();
					this._Race_ID = value;
					this.SendPropertyChanged("Race_ID");
					this.OnRace_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maze_Time", DbType="Int")]
		public System.Nullable<int> Maze_Time
		{
			get
			{
				return this._Maze_Time;
			}
			set
			{
				if ((this._Maze_Time != value))
				{
					this.OnMaze_TimeChanging(value);
					this.SendPropertyChanging();
					this._Maze_Time = value;
					this.SendPropertyChanged("Maze_Time");
					this.OnMaze_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maze_Name", DbType="VarChar(50)")]
		public string Maze_Name
		{
			get
			{
				return this._Maze_Name;
			}
			set
			{
				if ((this._Maze_Name != value))
				{
					this.OnMaze_NameChanging(value);
					this.SendPropertyChanging();
					this._Maze_Name = value;
					this.SendPropertyChanged("Maze_Name");
					this.OnMaze_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maze_OS", DbType="VarChar(50)")]
		public string Maze_OS
		{
			get
			{
				return this._Maze_OS;
			}
			set
			{
				if ((this._Maze_OS != value))
				{
					this.OnMaze_OSChanging(value);
					this.SendPropertyChanging();
					this._Maze_OS = value;
					this.SendPropertyChanged("Maze_OS");
					this.OnMaze_OSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maze_Computer", DbType="VarChar(50)")]
		public string Maze_Computer
		{
			get
			{
				return this._Maze_Computer;
			}
			set
			{
				if ((this._Maze_Computer != value))
				{
					this.OnMaze_ComputerChanging(value);
					this.SendPropertyChanging();
					this._Maze_Computer = value;
					this.SendPropertyChanged("Maze_Computer");
					this.OnMaze_ComputerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maze_Mouse", DbType="VarChar(50)")]
		public string Maze_Mouse
		{
			get
			{
				return this._Maze_Mouse;
			}
			set
			{
				if ((this._Maze_Mouse != value))
				{
					this.OnMaze_MouseChanging(value);
					this.SendPropertyChanging();
					this._Maze_Mouse = value;
					this.SendPropertyChanged("Maze_Mouse");
					this.OnMaze_MouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maze_MaxLevel", DbType="VarChar(50)")]
		public string Maze_MaxLevel
		{
			get
			{
				return this._Maze_MaxLevel;
			}
			set
			{
				if ((this._Maze_MaxLevel != value))
				{
					this.OnMaze_MaxLevelChanging(value);
					this.SendPropertyChanging();
					this._Maze_MaxLevel = value;
					this.SendPropertyChanged("Maze_MaxLevel");
					this.OnMaze_MaxLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maze_HashGroup", DbType="VarChar(50)")]
		public string Maze_HashGroup
		{
			get
			{
				return this._Maze_HashGroup;
			}
			set
			{
				if ((this._Maze_HashGroup != value))
				{
					this.OnMaze_HashGroupChanging(value);
					this.SendPropertyChanging();
					this._Maze_HashGroup = value;
					this.SendPropertyChanged("Maze_HashGroup");
					this.OnMaze_HashGroupChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
